[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "GeoViews",
    "section": "",
    "text": "Assignment 3\n\n\n\n\n\n\n\n\n\n\n\nFeb 22, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/J001_PSDV_Assignment3.html",
    "href": "posts/J001_PSDV_Assignment3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport geopandas as gpd\n%matplotlib inline\n%config InlineBackend.figure_format = 'retina'\n\n\nSpatial Aggreagations\n\nWhich state (consider all stations in that state) has the highest average PM2.5 concentration across all stations and across all years?\n\n\ndata=pd.read_csv(\"Data.csv\")\ngrouped_data=data.groupby(\"state\")[\"PM2.5\"].mean()\nmax_data=grouped_data.idxmax()\n\nprint(f\"The state with the highest average PM2.5 concentration is '{max_data}' with average value as {round(grouped_data[max_data],2)}\")\n\nThe state with the highest average PM2.5 concentration is 'Delhi' with average value as 104.1\n\n\n\nWhich state (consider all stations in that state) had the most days with hazardous PM2.5 levels (above 300 µg/m³) for the year 2023?\n\n\ndata=pd.read_csv(\"Data.csv\")\ndata[\"Timestamp\"]=pd.to_datetime(data[\"Timestamp\"],errors=\"coerce\")\n\ndata_2023=data[data[\"Timestamp\"].dt.year==2023]\n\ndata_2023=data_2023.dropna(subset=[\"PM2.5\"])\n\nhazardous_PM25=data_2023[data_2023[\"PM2.5\"]&gt;300].copy()\nhazardous_PM25.loc[:, \"Date\"] = hazardous_PM25[\"Timestamp\"].dt.date\n\nhazardous_days = hazardous_PM25.groupby([\"state\", \"Date\"]).size().reset_index(name=\"count\")\n\nstate_hazardous_days=hazardous_days.groupby(\"state\")[\"count\"].sum()\nmax_state=state_hazardous_days.idxmax()\n\nprint(f\"The state with the most days with hazardous PM2.5 levels is '{max_state}' with {state_hazardous_days[max_state]} days\")\n\nThe state with the most days with hazardous PM2.5 levels is 'Delhi' with 470 days\n\n\n\nWhich state has the highest variability in PM2.5 levels across its monitoring stations in 2023? (Think how would you measure variability)\n\n\ndata=pd.read_csv(\"Data.csv\")\ndata[\"Timestamp\"]=pd.to_datetime(data[\"Timestamp\"],errors=\"coerce\")\n\ndata_2023=data[data[\"Timestamp\"].dt.year==2023]\n\ndata_2023=data_2023.dropna(subset=[\"PM2.5\"])\ngrouped_data_2023=data_2023.groupby(\"state\")[\"PM2.5\"].std()\n\nmax_variability=grouped_data_2023.idxmax()\nprint(f\"The state with the highest variability in PM2.5 levels across its monitoring stations in 2023 was '{max_variability}'\")\n\nThe state with the highest variability in PM2.5 levels across its monitoring stations in 2023 was 'Delhi'\n\n\n\nWhich state has the lowest average PM2.5 levels during the Covid period (The year 2020-2021 both years inclusive)?\n\n\ndata=pd.read_csv(\"Data.csv\")\ndata[\"Timestamp\"]=pd.to_datetime(data[\"Timestamp\"],errors=\"coerce\")\n\ndata_COVID=data[(data[\"Timestamp\"].dt.year==2020) | (data[\"Timestamp\"].dt.year==2021)]\ndata_COVID=data_COVID.dropna(subset=[\"PM2.5\"])\n\navg_data_COVID=data_COVID.groupby(\"state\")[\"PM2.5\"].mean()\nmin_data_COVID=avg_data_COVID.idxmin()\n\nprint(f\"The state with the lowest average PM2.5 levels during the Covid period was '{min_data_COVID}' with average PM2.5 value as {round(avg_data_COVID[min_data_COVID],2)}\")\n\nThe state with the lowest average PM2.5 levels during the Covid period was 'Mizoram' with average PM2.5 value as 14.32\n\n\n\n\nTemporal Aggregation\n\nReport the station that recorded the highest value of PM 2.5 for the month Aug of 2020.\n\n\ndata=pd.read_csv(\"Data.csv\")\ndata[\"Timestamp\"]=pd.to_datetime(data[\"Timestamp\"],errors=\"coerce\")\n\ndata_req=data[(data[\"Timestamp\"].dt.year==2020) & (data[\"Timestamp\"].dt.month==8)]\nmax_value=data_req[\"PM2.5\"].idxmax()\nmax_value_station=data_req.loc[max_value,\"station\"]\n\nprint(f\"The station that recorded the highest value of PM 2.5 for the month Aug of 2020 was '{max_value_station}'\")\n\nThe station that recorded the highest value of PM 2.5 for the month Aug of 2020 was 'Lal Bahadur Shastri Nagar, Kalaburagi - KSPCB'\n\n\n\nFor the year 2018, calculate the average PM2.5 concentration for each season (Seasons being Winter: December-February, Summer: March-May, and Monsoon: June-September) for stations Lal Bahadur Shastri Nagar, Kalaburagi - KSPCB. Identifying the season with the highest pollution.\n\n\ndata=pd.read_csv(\"Data.csv\")\ndata[\"Timestamp\"]=pd.to_datetime(data[\"Timestamp\"],errors=\"coerce\")\n\n# Winter\ndata_Winter=data[(data[\"Timestamp\"].dt.year==2018) & ((data[\"Timestamp\"].dt.month==12) | (data[\"Timestamp\"].dt.month&lt;=2))]\ndata_Winter_station=data_Winter.loc[data_Winter[\"station\"].isin([\"Lal Bahadur Shastri Nagar, Kalaburagi - KSPCB\"])]\ndata_Winter_station=data_Winter_station.dropna(subset=[\"PM2.5\"])\navg_data_Winter=data_Winter_station.groupby(\"station\")[\"PM2.5\"].mean()\n\nprint(f\"Winter:\\n{avg_data_Winter}\\n\")\n\n# Summer\ndata_Summer=data[(data[\"Timestamp\"].dt.year==2018) & ((data[\"Timestamp\"].dt.month&gt;=3) | (data[\"Timestamp\"].dt.month&lt;=5))]\ndata_Summer_station=data_Summer.loc[data_Summer[\"station\"].isin([\"Lal Bahadur Shastri Nagar, Kalaburagi - KSPCB\"])]\ndata_Summer_station=data_Summer_station.dropna(subset=[\"PM2.5\"])\navg_data_Summer=data_Summer_station.groupby(\"station\")[\"PM2.5\"].mean()\n\nprint(f\"Summer:\\n{avg_data_Summer}\\n\")\n\n# Monsoon\ndata_Monsoon=data[(data[\"Timestamp\"].dt.year==2018) & ((data[\"Timestamp\"].dt.month&gt;=6) | (data[\"Timestamp\"].dt.month&lt;=9))]\ndata_Monsoon_station=data_Monsoon.loc[data_Monsoon[\"station\"].isin([\"Lal Bahadur Shastri Nagar, Kalaburagi - KSPCB\"])]\ndata_Monsoon_station=data_Monsoon_station.dropna(subset=[\"PM2.5\"])\navg_data_Monsoon=data_Monsoon_station.groupby(\"station\")[\"PM2.5\"].mean()\nprint(f\"Monsoon:\\n{avg_data_Monsoon}\\n\")\n\nWinter:\nstation\nLal Bahadur Shastri Nagar, Kalaburagi - KSPCB    67.492344\nName: PM2.5, dtype: float64\n\nSummer:\nstation\nLal Bahadur Shastri Nagar, Kalaburagi - KSPCB    52.729377\nName: PM2.5, dtype: float64\n\nMonsoon:\nstation\nLal Bahadur Shastri Nagar, Kalaburagi - KSPCB    52.729377\nName: PM2.5, dtype: float64\n\n\n\nCan you suggest some potential factors on why certain seasons are generally more polluted than others?\nANS:\n\nWinter - Temperature inversions trap pollutants, less wind dispersal, more biomass burning.\nSummer - Strong sunlight increases ozone (O₃) formation, dust storms in dry areas.\nMonsoon - Rainfall helps wash out pollutants, improving air quality.\nCompare the average PM2.5 levels during weekends and weekdays for the station Lal Bahadur Shastri Nagar, Kalaburagi - KSPCB over the year 2021. Create a plot to show these trends Steps:\n\nCalculate the monthly average PM2.5 for weekdays and weekends separately\nX-axis: Months (January to December).\nY-axis: Average PM2.5 levels.\nUse two lines: one for the monthly average PM2.5 levels on weekdays and one for weekends\n\ndata=pd.read_csv(\"Data.csv\")\ndata[\"Timestamp\"]=pd.to_datetime(data[\"Timestamp\"],errors=\"coerce\")\n\ndata_2021=data[(data[\"Timestamp\"].dt.year==2021) & (data[\"station\"]==\"Lal Bahadur Shastri Nagar, Kalaburagi - KSPCB\")]\n\ndata_2021=data_2021.dropna(subset=[\"PM2.5\"])\n\ndata_2021[\"Month\"]=data_2021[\"Timestamp\"].dt.month\ndata_2021[\"Day of Week\"]=data_2021[\"Timestamp\"].dt.dayofweek\n\nweekdays_data=data_2021[data_2021[\"Day of Week\"]&lt;5]\nweekends_data=data_2021[data_2021[\"Day of Week\"]&gt;=5]\n\nmonth_avg_weekdays=weekdays_data.groupby(\"Month\")[\"PM2.5\"].mean()\nmonth_avg_weekends=weekends_data.groupby(\"Month\")[\"PM2.5\"].mean()\n\nplt.figure(figsize=(10,6))\nplt.plot(month_avg_weekdays.index, month_avg_weekdays.values, marker='o', linestyle='-', label=\"Weekdays\")\nplt.plot(month_avg_weekends.index, month_avg_weekends.values, marker='o', linestyle='-', label=\"Weekends\")\nplt.xlabel(\"Month\")\nplt.ylabel(\"Average PM2.5\")\nplt.title(\"Average PM2.5 Levels During Weekdays and Weekends\")\nplt.xticks(range(1, 13))\nplt.legend()\nplt.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\n\n\nSpatio-temporal aggregation\n\nFor each state, calculate the percentage increase or decrease in PM2.5 levels during monsoon months (June to September) compared to summer months (March to May). Which state has the most difference (increase or decrease) for the year 2022?\n\n\ndata=pd.read_csv(\"Data.csv\")\ndata[\"Timestamp\"]=pd.to_datetime(data[\"Timestamp\"],errors=\"coerce\")\n\ndata_2022=data[data[\"Timestamp\"].dt.year==2022]\n\ndata_2022=data_2022.dropna(subset=[\"PM2.5\"])\n\ndata_2022[\"Month\"]=data_2022[\"Timestamp\"].dt.month\n\ndata_Monsoon=data_2022[(data_2022[\"Month\"]&lt;=9) & (data_2022[\"Month\"]&gt;=6)]\nstate_monsoon_data=data_Monsoon.groupby(\"state\")[\"PM2.5\"].mean()\n\ndata_Summer=data_2022[(data_2022[\"Month\"]&lt;=5) & (data_2022[\"Month\"]&gt;=3)]\nstate_summer_data=data_Summer.groupby(\"state\")[\"PM2.5\"].mean()\n\npercent_change=((state_monsoon_data-state_summer_data)/state_summer_data)*100\n\n# Here change for every state is negative so decrement so the most negative value will be the highest change.\nmax_change_state=percent_change.idxmin()\n\nprint(f\"The state with the most difference (decrease) for the year 2022 was '{max_change_state}' with {round(abs(percent_change[max_change_state]),4)} % change\")\n\nThe state with the most difference (decrease) for the year 2022 was 'Assam' with 61.1764 % change\n\n\n\nPlot the average PM2.5 levels for Delhi across each season (Winter: December-February, Summer: March-May, Monsoon: June-September) from 2017 to 2023. What seasonal variation, if any, can you observe in pollution levels?\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndata = pd.read_csv(\"Data.csv\")\ndata[\"Timestamp\"] = pd.to_datetime(data[\"Timestamp\"], errors=\"coerce\")\n\ndata_delhi = data[(data[\"state\"] == \"Delhi\") & (data[\"Timestamp\"].dt.year &gt;= 2017) & (data[\"Timestamp\"].dt.year &lt;= 2023)]\n\ndata_delhi = data_delhi.dropna(subset=[\"PM2.5\"])\ndata_delhi[\"Month\"] = data_delhi[\"Timestamp\"].dt.month\n\ndata_delhi_summer = data_delhi[(data_delhi[\"Month\"] &gt;= 3) & (data_delhi[\"Month\"] &lt;= 5)]\ndata_delhi_monsoon = data_delhi[(data_delhi[\"Month\"] &gt;= 6) & (data_delhi[\"Month\"] &lt;= 9)]\ndata_delhi_winter = data_delhi[(data_delhi[\"Month\"] == 12) | (data_delhi[\"Month\"] &lt;= 2)]\n\navg_delhi_summer = data_delhi_summer.groupby(data_delhi_summer[\"Timestamp\"].dt.year)[\"PM2.5\"].mean()\navg_delhi_monsoon = data_delhi_monsoon.groupby(data_delhi_monsoon[\"Timestamp\"].dt.year)[\"PM2.5\"].mean()\navg_delhi_winter = data_delhi_winter.groupby(data_delhi_winter[\"Timestamp\"].dt.year)[\"PM2.5\"].mean()\n\nplt.figure(figsize=(10, 6))\nplt.plot(avg_delhi_summer.index, avg_delhi_summer.values, label=\"Summer\", marker='o',color=\"Orange\")\nplt.plot(avg_delhi_monsoon.index, avg_delhi_monsoon.values, label=\"Monsoon\", marker='o',color=\"Green\")\nplt.plot(avg_delhi_winter.index, avg_delhi_winter.values, label=\"Winter\", marker='o',color=\"Blue\")\n\nplt.title(\"Seasonal Variation of PM2.5 Levels in Delhi (2017-2023)\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Average PM2.5 (µg/m³)\")\nplt.legend()\nplt.grid(True, linestyle='--', alpha=0.7)\n\nplt.tight_layout()\nplt.show()\n\n# Winter: PM2.5 levels are usually highest due to low temperatures, temperature inversion, and increased emissions (heating, burning).\n# Summer: PM2.5 levels moderately high but lower than winter due to better air circulation.\n# Monsoon: PM2.5 levels are lowest due to rainfall washing pollutants away\n\n\n\n\n\n\n\n\n\nPlot a time-series graph comparing Delhi’s PM2.5 levels with Mumbai’s from 2015 to 2023. Which city had more fluctuations? (Hint: Think what fluctuation means)\n\n\ndata=pd.read_csv(\"Data.csv\")\ndata[\"Timestamp\"]=pd.to_datetime(data[\"Timestamp\"],errors=\"coerce\")\n\ndata_req=data[(data[\"Timestamp\"].dt.year&gt;=2015) & (data[\"Timestamp\"].dt.year&lt;=2023) & ((data[\"state\"]==\"Delhi\") | (data[\"city\"]==\"Mumbai\"))]\n\ndata_req=data_req.dropna(subset=[\"PM2.5\"])\ndata_req[\"Year\"]=data_req[\"Timestamp\"].dt.year\n\navg_mumbai=data_req[data_req[\"city\"]==\"Mumbai\"].groupby(\"Year\")[\"PM2.5\"].mean()\navg_delhi=data_req[data_req[\"state\"]==\"Delhi\"].groupby(\"Year\")[\"PM2.5\"].mean()\n\nplt.figure(figsize=(10,6))\nplt.plot(avg_mumbai.index,avg_mumbai.values,label=\"Mumbai\",marker=\"o\")\nplt.plot(avg_delhi.index,avg_delhi.values,label=\"Delhi\",marker=\"o\")\nplt.title(\"Delhi V/S Mumbai\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Average PM2.5 (µg/m³)\")\nplt.legend()\nplt.grid(True,linestyle=\"--\",alpha=0.7)\n\nplt.tight_layout()\nplt.show()\n\nstate_fluctuations=data_req.groupby(\"state\")[\"PM2.5\"].std()\ncity_fluctuations=data_req.groupby(\"city\")[\"PM2.5\"].std()\n\ndelhi_fluctuation=state_fluctuations[\"Delhi\"]\nmumbai_fluctuation=city_fluctuations[\"Mumbai\"]\n\nif delhi_fluctuation&gt;mumbai_fluctuation:\n    print(\"Delhi had more fluctuations\")\nelse:\n    print(\"Mumbai had more fluctuations\")\n\n\n\n\n\n\n\n\nDelhi had more fluctuations\n\n\n\n\nPopulation-Based\n\nWhich state in India has the highest number of monitoring stations relative to its population?\n\n\nstation_data=pd.read_csv(\"Data.csv\")\npopulation_data=pd.read_csv(\"State_data.csv\")\n\ngrouped_station_data=station_data.groupby(\"state\")[\"station\"].count()\ngrouped_population_data=population_data.groupby(\"State\")[\"Population\"].sum()\nrelative_data=grouped_station_data/grouped_population_data\n\nmax_relative_state=relative_data.idxmax()\n\nprint(f\"The state with the highest number of monitoring stations relative to its population was '{max_relative_state}'\")\n\nThe state with the highest number of monitoring stations relative to its population was 'Chandigarh'\n\n\n\nPlot a bar chart showing the top 5 most polluted states in terms of per capita PM2.5 exposure in 2023.\n\n\ndata=pd.read_csv(\"Data.csv\")\nstate_data=pd.read_csv(\"State_data.csv\")\n\ndata[\"Timestamp\"]=pd.to_datetime(data[\"Timestamp\"],errors=\"coerce\")\n\ndata_2023=data[data[\"Timestamp\"].dt.year==2023]\ndata_2023=data_2023.dropna(subset=[\"PM2.5\"])\n\npollu_state_data=data_2023.groupby(\"state\")[\"PM2.5\"].mean()\npopulation_data=state_data.groupby(\"State\")[\"Population\"].sum()\n\nper_capita_data=pollu_state_data/population_data\ntop_5=per_capita_data.sort_values(ascending=False).head(5)\n\nplt.figure(figsize=(10, 6))\ntop_5.plot(kind=\"bar\", color=\"orange\", alpha=0.8)\nplt.title(\"Top 5 Most Polluted States (Per Capita PM2.5 Exposure) - 2023\")\nplt.xlabel(\"State\")\nplt.ylabel(\"Per Capita PM2.5 Exposure (µg/m³) per person)\")\nplt.grid(axis=\"y\", linestyle=\"--\", alpha=0.7)\nplt.xticks(rotation=45)\n\nplt.show()\n\n\n\n\n\n\n\n\n\nPlot the relationship between population density and average PM2.5 concentration for each state. What conclusion can you draw about the correlation between population density and pollution? X-axis: Population density (people per square kilometer). Y-axis: Average PM2.5 concentration. Use a scatter plot to show the relationship, where each point represents a state.`\n\n\ndata=pd.read_csv(\"Data.csv\")\nstate_data=pd.read_csv(\"State_data.csv\")\n\npollu_state_data=data.groupby(\"state\")[\"PM2.5\"].mean()\npopulation_data=state_data.groupby(\"State\")[\"Population\"].sum()\narea_data=state_data.groupby(\"State\")[\"Area (km2)\"].sum()\n\npopulation_density=population_data/area_data\n\nplt.figure(figsize=(10, 6))\nplt.scatter(population_density, pollu_state_data, color=\"blue\", alpha=0.7)\n\nplt.xlabel(\"Population Density (people per km²)\")\nplt.ylabel(\"Average PM2.5 (µg/m³)\")\nplt.title(\"Population Density vs. PM2.5 Levels (2023)\")\nplt.grid(True, linestyle=\"--\", alpha=0.5)\n\nplt.show()\n\n\n\n\n\n\n\n\n\n\nArea Based\n\nWhich state has the highest PM2.5 concentration per square kilometer? Plot the pollution levels for all states relative to their area. X-axis: States. Y-axis: PM2.5 concentration per square kilometer. Use a bar plot where each bar represents a state, and the height shows PM2.5 per sq km.\n\n\ndata=pd.read_csv(\"Data.csv\")\nstate_data=pd.read_csv(\"State_data.csv\")\n\npollu_state_data=data.groupby(\"state\")[\"PM2.5\"].mean()\narea_data=state_data.groupby(\"State\")[\"Area (km2)\"].sum()\n\npollu_per_sq_km=pollu_state_data/area_data\nmax_pollu_state=pollu_per_sq_km.idxmax()\nprint(f\"The state with the highest PM2.5 concentration per square kilometer is '{max_pollu_state}'\")\n\nplt.figure(figsize=(10,6))\ncolors=[\"Orange\",\"Blue\",\"Green\",\"Yellow\",\"Red\"]\nbars=plt.bar(pollu_per_sq_km.index,pollu_per_sq_km.values,color=colors)\nplt.bar_label(bars, fmt=\"%.4f\", label_type=\"edge\", fontsize=10, rotation=90, padding=3)\nplt.yscale(\"log\")\nplt.title(\"Pollution levels relative to area\")\nplt.xlabel(\"State\")\nplt.ylabel(\"PM2.5 per sq km\")\nplt.grid(axis=\"y\",linestyle=\"--\",alpha=0.7)\nplt.xticks(rotation=90)\nplt.tight_layout()\n\nplt.show()\n\nThe state with the highest PM2.5 concentration per square kilometer is 'Chandigarh'\n\n\n\n\n\n\n\n\n\n\nCompare the total number of monitoring stations per square kilometer in each state. Identify the state with the highest density of monitoring stations relative to its area. Show a bar plot where each bar represents a state, and the height shows the number of monitoring stations per square kilometer.\n\n\ndata=pd.read_csv(\"Data.csv\")\nstate_data=pd.read_csv(\"State_data.csv\")\n\nstation_data=data.groupby(\"state\")[\"station\"].count()\narea_data=state_data.groupby(\"State\")[\"Area (km2)\"].sum()\n\nstation_per_sq_km=station_data/area_data\nmax_station_state=station_per_sq_km.idxmax()\nprint(f\"The state with the highest density of monitoring stations relative to its area is '{max_station_state}'\")\n\nplt.figure(figsize=(10,6))\ncolors=[\"Orange\",\"Blue\",\"Green\",\"Yellow\",\"Red\"]\nbars=plt.bar(station_per_sq_km.index,station_per_sq_km.values,color=colors)\nplt.bar_label(bars, fmt=\"%.2f\", label_type=\"edge\", fontsize=10, rotation=90, padding=3)\nplt.yscale(\"log\")\nplt.title(\"Monitoring stations relative to Area\")\nplt.xlabel(\"State\")\nplt.ylabel(\"Monitoring stations per sq km\")\nplt.grid(axis=\"y\",linestyle=\"--\",alpha=0.7)\nplt.xticks(rotation=90)\nplt.tight_layout()\n\nplt.show()\n\nThe state with the highest density of monitoring stations relative to its area is 'Delhi'\n\n\n\n\n\n\n\n\n\n\nCompare the average PM2.5 levels between Maharashtra and Madhya Pradesh over the year 2021. Given that both states have similar area sizes but different population densities, analyze how population density impacts pollution levels in these two states.\n\n\ndata=pd.read_csv(\"Data.csv\")\nstate_data=pd.read_csv(\"State_data.csv\")\n\ndata[\"Timestamp\"]=pd.to_datetime(data[\"Timestamp\"],errors=\"coerce\")\n\ndata_2021=data[data[\"Timestamp\"].dt.year==2021]\ndata_2021=data_2021.dropna(subset=[\"PM2.5\"])\n\ngrouped_data=data_2021.groupby(\"state\")[\"PM2.5\"].mean()\n\nmaharashtra_data=grouped_data[\"Maharashtra\"]\nmadhya_pradesh_data=grouped_data[\"Madhya Pradesh\"]\n\nstate_population=state_data.groupby(\"State\")[\"Population\"].sum()\nmaharashtra_population=state_population[\"Maharashtra\"]\nmadhya_pradesh_population=state_population[\"Madhya Pradesh\"]\n\narea_data=state_data.groupby(\"State\")[\"Area (km2)\"].sum()\nmaharashtra_area=area_data[\"Maharashtra\"]\nmadhya_pradesh_area=area_data[\"Madhya Pradesh\"]\n\npopulation_density_maharashtra=maharashtra_population/maharashtra_area\npopulation_density_madhya_pradesh=madhya_pradesh_population/madhya_pradesh_area\n\nif (population_density_maharashtra&gt;population_density_madhya_pradesh) & (maharashtra_data&gt;madhya_pradesh_data):\n    print(\"Maharashtra has more pollution and more population density, meaning more people so, more pollution.\")\nelif (population_density_maharashtra&gt;population_density_madhya_pradesh) & (maharashtra_data&lt;madhya_pradesh_data):\n    print(\"Madhya Pradesh has more pollution but less population density, meaning the major sources of pollution are industries and manufacturing.\")\nelif (population_density_maharashtra&lt;population_density_madhya_pradesh) & (maharashtra_data&lt;madhya_pradesh_data):\n    print(\"Madhya Pradesh has more pollution and more population density, meaning more people so, more pollution.\")\nelse:\n  print(\"Maharashtra has more pollution but less population density, meaning the major sources of pollution are industries and manufacturing.\")\n\nMadhya Pradesh has more pollution but less population density, meaning the major sources of pollution are industries and manufacturing.\n\n\n\n\nFunding Based\n\nCompare the average PM2.5 levels between states that received NCAP funding and those that did not in 2021.\n\n\ndata=pd.read_csv(\"Data.csv\")\nstate_data=pd.read_csv(\"State_data.csv\")\nfunding_data=pd.read_csv(\"NCAP_Funding.csv\")\n\ndata[\"Timestamp\"] = pd.to_datetime(data[\"Timestamp\"], errors=\"coerce\")\ndata[\"Year\"]=data[\"Timestamp\"].dt.year\n\nfunding_2021 = funding_data[funding_data[\"Amount released during FY 2021-22\"] != \"-\"]\n\nfunded_states_2021 = set(funding_2021[\"State\"])\n\nfunded_pollution = data[data[\"state\"].isin(funded_states_2021)]\nnon_funded_pollution = data[~data[\"state\"].isin(funded_states_2021)]\n\navg_pm25_funded = funded_pollution[\"PM2.5\"].mean()\navg_pm25_not_funded = non_funded_pollution[\"PM2.5\"].mean()\n\nprint(f\"Average PM2.5 in NCAP funded states (2021): {avg_pm25_funded:.2f}\")\nprint(f\"Average PM2.5 in non-funded states (2021): {avg_pm25_not_funded:.2f}\")\n\nAverage PM2.5 in NCAP funded states (2021): 62.07\nAverage PM2.5 in non-funded states (2021): 52.87\n\n\n\nCreate a time series plot showing PM2.5 levels with an increment in NCAP funding for Assam. Has an increment of the financing led to noticeable improvements in air quality?\n\n\nassam_funding = funding_data[funding_data['State'] == 'Assam']\n\ndata[\"Timestamp\"] = pd.to_datetime(data[\"Timestamp\"], errors=\"coerce\")\ndata[\"Year\"]=data[\"Timestamp\"].dt.year\n\ndata_2019 = data[data['Year'] == 2019]\ndata_2020 = data[data['Year'] == 2020]\n\n\nassam_19 = assam_funding.groupby('State')['Amount released during FY 2019-20'].sum().values[0]\nassam_20 = assam_funding.groupby('State')['Amount released during FY 2020-21'].sum().values[0]\nassam_21 = assam_funding.groupby('State')['Amount released during FY 2021-22'].sum().values[0]\n\nassam_pm2_19 = data_2019[data_2019['state'] == 'Assam']['PM2.5'].mean()\nassam_pm2_20 = data_2020[data_2020['state'] == 'Assam']['PM2.5'].mean()\nassam_pm2_21 = data_2021[data_2021['state'] == 'Assam']['PM2.5'].mean()\n\n\nyears = [2019, 2020, 2021]\nfunding_values = [assam_19, assam_20, assam_21]\npm25_values = [assam_pm2_19, assam_pm2_20, assam_pm2_21]\n\nfig, ax1 = plt.subplots(figsize = (10, 6))\n\nax1.plot(years, pm25_values, label = 'PM2.5 Levels', color = 'red', marker = 'o')\nax1.set_xlabel('Year')\nax1.set_ylabel('Average PM2.5 Levels', color='red')\nax1.tick_params(axis = 'y', labelcolor = 'red')\nax1.set_xticks(years)\n\nax2 = ax1.twinx()\nax2.plot(years, funding_values, label = 'Funding', color = 'blue', marker = 'o')\nax2.set_ylabel('NCAP Funding (in crore)', color = 'blue')\nax2.tick_params(axis = 'y', labelcolor = 'blue')\n\nplt.title('Assam: PM2.5 Levels vs. NCAP Funding (2019-2021)')\nfig.legend(loc = \"upper right\", ncol = 2)\nplt.grid(True)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nassam_funding = funding_data[funding_data['State'] == 'Assam']\ndata[\"Timestamp\"] = pd.to_datetime(data[\"Timestamp\"], errors=\"coerce\")\ndata[\"Year\"]=data[\"Timestamp\"].dt.year\n\ndata_2019 = data[data['Year'] == 2019]\n\nassam_19 = assam_funding.groupby('State')['Amount released during FY 2019-20'].sum().values[0]\nassam_20 = assam_funding.groupby('State')['Amount released during FY 2020-21'].sum().values[0]\nassam_21 = assam_funding.groupby('State')['Amount released during FY 2021-22'].sum().values[0]\n\nassam_pm2_19 = data_2019[data_2019['state'] == 'Assam']['PM2.5'].mean()\nassam_pm2_20 = data_2020[data_2020['state'] == 'Assam']['PM2.5'].mean()\nassam_pm2_21 = data_2021[data_2021['state'] == 'Assam']['PM2.5'].mean()\n\n\nyears = [2019, 2020, 2021]\nfunding_values = [assam_19, assam_20, assam_21]\npm25_values = [assam_pm2_19, assam_pm2_20, assam_pm2_21]\n\nfig, ax1 = plt.subplots(figsize = (10, 6))\n\nax1.plot(years, pm25_values, label = 'PM2.5 Levels', color = 'red', marker = 'o')\nax1.set_xlabel('Year')\nax1.set_ylabel('Average PM2.5 Levels', color='red')\nax1.tick_params(axis = 'y', labelcolor = 'red')\nax1.set_xticks(years)\n\nax2 = ax1.twinx()\nax2.plot(years, funding_values, label = 'Funding', color = 'blue', marker = 'o')\nax2.set_ylabel('NCAP Funding (in crore)', color = 'blue')\nax2.tick_params(axis = 'y', labelcolor = 'blue')\n\nplt.title('Assam: PM2.5 Levels vs. NCAP Funding (2019-2021)')\nfig.legend(loc = \"upper right\", ncol = 2)\nplt.grid(True)\nplt.tight_layout()\nplt.show()\n\n# No increase in funding has led to a decrease in air quality as compared to 2019 and increased a little in 2021 as compared to 2020.\n\n\nCreate a scatter plot to showcase the area versus funding received by a state. Mark every state with a different color and show the legend outside the plot.\n\n\nfunding_data = pd.read_csv('NCAP_Funding.csv')\nstate_data = pd.read_csv('State_data.csv')\n\nnumeric_columns = ['Amount released during FY 2019-20', 'Amount released during FY 2020-21',\n                   'Amount released during FY 2021-22', 'Total fund released', 'Utilisation as on June 2022']\nfor col in numeric_columns:\n    funding_data[col] = pd.to_numeric(funding_data[col].replace('-', '0'), errors='coerce')\n\nstate_funding = funding_data.groupby('State')['Total fund released'].sum().reset_index()\n\nmerged_data = pd.merge(state_funding, state_data, on='State', how='inner')\n\nplt.figure(figsize=(12, 8))\nscatter = plt.scatter(merged_data['Area (km2)'], merged_data['Total fund released'],\n                      c=range(len(merged_data)), cmap='viridis')\n\nplt.xlabel('State Area (km²)')\nplt.ylabel('Total Funding Received (Cr)')\nplt.title('State Area vs Total NCAP Funding Received')\n\ncbar = plt.colorbar(scatter)\ncbar.set_label('States')\ncbar.set_ticks(range(len(merged_data)))\ncbar.set_ticklabels(merged_data['State'])\n\nplt.tight_layout()\nplt.show()\n\n\n\nMiscellaneous Questions\n\nFor the most polluted city in 2023 (highest average pollution in 2023), calculate the percentage of days with PM2.5 levels above the hazardous threshold (300 µg/m³)[1 Mark]\n\n\ndata = pd.read_csv(\"Data.csv\")\n\ndata['Timestamp'] = pd.to_datetime(data['Timestamp'], errors='coerce')\n\ndata_2023 = data[data['Timestamp'].dt.year == 2023].dropna(subset=['PM2.5', 'city'])\n\nmost_polluted_city = data_2023.groupby('city')['PM2.5'].mean().idxmax()\n\ndaily_avg_pm25 = data_2023[data_2023['city'] == most_polluted_city].groupby(data_2023['Timestamp'].dt.date)['PM2.5'].mean()\n\nhazardous_percentage = (daily_avg_pm25 &gt; 300).mean() * 100\n\nprint(f\"Most Polluted City in 2023: {most_polluted_city}\")\nprint(f\"Percentage of Hazardous Days (&gt;300 µg/m³): {hazardous_percentage:.2f}%\")\n\n\nAnalyze the PM2.5 levels in Delhi during Diwali (October-November) and New Year compared to regular months over the 3 years (2018-2020). Do you observe any significant pollution spikes during these festivals? If spikes are observed, Can you mark these spikes using arrows?\n\n\ndata_delhi = data[data['state'] == 'Delhi']\ndata_diwali_del = data_delhi[(data_delhi['Timestamp'].dt.month == 10) | (data_delhi['Timestamp'].dt.month == 11)]\ndata_rmonths_del = data_delhi[data_delhi['Timestamp'].dt.month.isin([1, 2, 3, 4, 5, 6, 7, 8, 9])]\n\ndata_diwali_del['Timestamp'] = pd.to_datetime(data_diwali_del['Timestamp'],errors=\"coerce\")\ndata_rmonths_del['Timestamp'] = pd.to_datetime(data_rmonths_del['Timestamp'],errors=\"coerce\")\n\ndata_diwali_del[\"Year\"]=data_diwali_del[\"Timestamp\"].dt.year\ndata_rmonths_del[\"Year\"]=data_rmonths_del[\"Timestamp\"].dt.year\n\ndiwali_3years = data_diwali_del[(data_diwali_del['Year'] &gt;= 2018) & (data_diwali_del['Year'] &lt;= 2020)]\nrmonths_3years = data_rmonths_del[(data_rmonths_del['Year'] &gt;= 2018) & (data_rmonths_del['Year'] &lt;= 2020)]\n\ndiwali_avg_pm = diwali_3years.groupby(diwali_3years['Timestamp'].dt.date)['PM2.5'].mean()\nrmonths_avg_pm = rmonths_3years.groupby(rmonths_3years['Timestamp'].dt.date)['PM2.5'].mean()\n\nplt.figure(figsize=(12, 6))\ndiwali_avg_pm.plot(label = 'Diwali (Oct-Nov)', color = 'red')\nrmonths_avg_pm.plot(label = 'Regular Months', color = 'blue')\n\nfor Year in [2018, 2019, 2020]:\n    data_diwali_Year = diwali_3years[diwali_3years['Year'] == Year]\n    diwali_avg_pm_Year = data_diwali_Year.groupby(data_diwali_Year['Timestamp'].dt.date)['PM2.5'].mean()\n    spike_date_Year = diwali_avg_pm_Year.idxmax()\n    spike_value_Year = diwali_avg_pm_Year.max()\n\n    plt.annotate('Peak', xy = (spike_date_Year, spike_value_Year), xytext = (spike_date_Year, spike_value_Year + 50), arrowprops = dict(facecolor = 'black', arrowstyle = '-&gt;'), color='black')\n\nplt.title('PM2.5 Levels in Delhi (2018-2020) - Diwali vs Regular Months', pad = 30)\nplt.xlabel('Date')\nplt.ylabel('PM2.5 Level (µg/m³)')\nplt.legend(title = 'Period')\nplt.grid(True)\nplt.show()\n\n\nIdentify the state that received the highest NCAP funding in 2020 and determine if its air pollution levels improved significantly by 2023. Use a line graph to compare yearly average PM2.5 trends.\n\n\nhighest_funding_state = funding_data.groupby('State')['Amount released during FY 2020-21'].sum().idxmax()\n\nprint(f\"State with highest NCAP funding in 2020: {highest_funding_state}\")\n\ndata[\"Timestamp\"] = pd.to_datetime(data[\"Timestamp\"], errors=\"coerce\")\ndata[\"Year\"]=data[\"Timestamp\"].dt.year\nstate_pm_trend = data[data['state'] == highest_funding_state].groupby('Year')['PM2.5'].mean()\n\nplt.figure(figsize=(10, 5))\nsns.lineplot(x = state_pm_trend.index, y = state_pm_trend.values, marker = 'o', linewidth = 2, color = 'b')\n\nplt.xlabel(\"Year\")\nplt.ylabel(\"Average PM2.5 Level (μg/m³)\")\nplt.xlim(2019.99,2023.01)\nplt.xticks([2020,2021,2022,2023])\nplt.title(f\"Yearly PM2.5 Trend in {highest_funding_state} (2020-2023)\")\nplt.grid(True)\n\nplt.show()\n\n\nDraw the map of India and plot the sensor locations on the map.\n\n\nworld = gpd.read_file(\"ne_110m_admin_0_countries.shp\")\nindia_map = world[world[\"ADMIN\"] == \"India\"]\n\nsensor_data = pd.read_csv(\"Data.csv\")\n\nfig, ax = plt.subplots(figsize=(10, 8))\nindia_map.plot(ax=ax, color=\"orange\", edgecolor=\"black\")\n\nplt.scatter(sensor_data[\"longitude\"], sensor_data[\"latitude\"],\n            color=\"brown\", marker=\"o\", edgecolors=\"black\", s=25, label=\"Sensor\")\n\nplt.title(\"Sensor Locations in India\", fontsize=14)\nplt.xlabel(\"Longitude\")\nplt.ylabel(\"Latitude\")\nplt.grid(True, linestyle=\"--\", alpha=0.5)\nplt.legend()\n\nplt.show()\n\n\n\nTell us something new\n\nTell us something interesting from the dataset that we have not asked. Anything that intrigues you, anything that might be useful to the policymakers.\n\nMismatch Between Pollution Levels and NCAP Funding\nSome cities have high PM2.5 levels (top 25%) but received low funding (bottom 25%), suggesting they may have been overlooked in NCAP allocations. Conversely, some cities received high funding but still have low improvement in air quality, indicating either inefficient fund utilization or external pollution sources. Examples from the Data High Pollution, Low Funding:\nAngul (Odisha): PM2.5 = 118.56 µg/m³, NCAP funding = ₹1.2 crore Nalbari (Assam): PM2.5 = 104.00 µg/m³, NCAP funding = ₹1.06 crore Rourkela (Odisha): PM2.5 = 93.19 µg/m³, NCAP funding = ₹1.2 crore These cities have some of the highest pollution levels but received minimal NCAP funds, suggesting possible oversight. High Funding, Limited Pollution Improvement:\nChandigarh: NCAP funding = ₹17.89 crore, PM2.5 = 32.89 - 44.36 µg/m³ Srinagar (J&K): NCAP funding = ₹12.95 crore, PM2.5 = 28.33 µg/m³ These cities received significant funding but already have relatively low PM2.5 levels, raising concerns about fund allocation efficiency."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Python GeoViews",
    "section": "",
    "text": "GeoViews is here!!"
  }
]